<div class="form-group">
  <div id="map" class="map"></div>
  <!-- no need to put the popup html code here, it will automati(gi)cally be added by our js file-->                
  <label>Address</label>                
  <input id="map-search" class="map-control form-control" type="text" placeholder="Type address in search box above...">                
</div>

<div class="manual-address-fields">
  <%= f.input :venue, field_lock: true %>
  <%= f.input :city, field_lock: true %>
  <%= f.input :county, field_lock: true %>
  <%= f.input :country, as: :string, field_lock: true %>
  <%= f.input :postcode, field_lock: true %>
  <%= f.hidden_field :latitude %>
  <%= f.hidden_field :longitude %>
</div>



<script type="text/javascript">
((win, doc) => {

  const olview = new ol.View({  
    center: ol.proj.fromLonLat([-2.233948899999973,53.4674583]),
    zoom: 3,  
  });

  const baseLayer = new ol.layer.Tile({
    source: new ol.source.OSM(),
  });
    
  const map = new ol.Map({
    target: doc.querySelector('#map'),
    view: olview,
    layers: [baseLayer],
  });
  
  const popup = new ol.Overlay.Popup();

  // Instantiate with some options and add the Control
  const geocoder = new Geocoder('nominatim', {
    provider: 'osm',
    targetType: 'text-input',
    lang: 'en',
    autoComplete: true,
    placeholder: 'Search for ...',
    limit: 5,
    keepOpen: false,
  });

  map.addControl(geocoder);
  map.addOverlay(popup);

  var cooord = [0,0];
  var adressformated = "";

  var venue;
  geocoder.on('addresschosen', function(evt){
    venue = "";
    $('#event_postcode').val("");
    $('#event_country').val("");
    $('#event_city').val("");
    $('#event_county').val("");
    $('#event_venue').val("");    
    $('#event_latitude').val("");
    $('#event_longitude').val("");

  var feature = evt.feature,
      coord = evt.coordinate,
      address = evt.address;
  geocoder.getSource().clear();
  geocoder.getSource().addFeature(feature);
   
  //thanks to https://stackoverflow.com/questions/26967638/convert-point-to-lat-lon
  //openlayers uses by default the Web Mercator projection (EPSG:3857) see the faq https://openlayers.org/en/latest/doc/faq.html
  var lonlat = ol.proj.transform(evt.coordinate, 'EPSG:3857', 'EPSG:4326');
  var lon = lonlat[0];
  var lat = lonlat[1];
  
  // some popup solution
  popup.show(evt.coordinate, evt.address.formatted);
  cooord = evt.coordinate;
  adressformated = evt.address.formatted;
  
  for (var key in address.details){
    var value = address.details[key];
      //console.log("key",key, "value", value);
    
      var state;
      var city;
      //google maps can get place.name, the name of a place (business name for example if it's a business)
      //here, venue will simply be houseNumber + road, I do not know how we could have the name of a place the same way google map has access to that
      var road;
      var houseNumber;
      
      switch (key) {
        case 'houseNumber':
          //console.log('houseNumber',value);
          houseNumber = value;
          break;
        case 'road':
          //console.log('road',value); 
          road = value;          
          break;
        case 'city':
          //console.log('city',value);
          city = value;
          break;
        case 'state':
          //console.log('state',value);
          state = value;
          break;
        case 'country':
          //console.log('country',value);
          $('#event_country').val(value);
          break;
        case 'postcode':
          //console.log('postcode',value);
          $('#event_postcode').val(value);
          break;
      }    
       
  }  
     
  var village;
  var county;
    
  for (var key in address.original.details){
    var value = address.original.details[key];
      switch (key) {
        case 'village':
          //console.log('village',value);
          village = value;
          break;
        case 'county':
          //console.log('county',value);
          county = value;
          break;
      }    
  }    
  
    
  if (city !== undefined) {
      $('#event_city').val(city);
  }
  else if (village !== undefined) {
      $('#event_city').val(village);
  }
  
      
  if (county !== undefined) {
      $('#event_county').val(county);     
  }
  else if (state !== undefined) {
      $('#event_county').val(state);
  }  
    

  if ((houseNumber !== undefined && houseNumber !== "") && (road !== undefined && road !== "")) {
      venue = houseNumber + ', ' + road;
  }
  else if (road !== undefined && road !== ""){
      venue =  road;
  }
    
    $('#event_venue').val(venue);    
    $('#event_latitude').val(lat);
    $('#event_longitude').val(lon);  
  
  $('#map-search').val(address.details.name);
});


var indecision = 0;

// display popup on click
map.on('click', function (evt) {
  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {
    return feature;
  });
  if (feature) {  
    if(indecision==0){
    indecision=1;
    popup.hide();
    }
    else{
    indecision=0;
    popup.show(cooord, adressformated);
    }

  }

});



var closer = document.getElementsByClassName("ol-popup-closer");
//only one popup possible so no problem here normally
closer[0].onclick = function () {
    venue = "";
    $('#event_postcode').val("");
    $('#event_country').val("");
    $('#event_city').val("");
    $('#event_county').val("");
    $('#event_venue').val("");    
    $('#event_latitude').val("");
    $('#event_longitude').val("");
    $('#map-search').val("");
    geocoder.getSource().clear(); 
};
  
})(window, document);

</script>


