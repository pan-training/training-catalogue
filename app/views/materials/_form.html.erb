<%= simple_form_for @material, :html => {:id => 'material_form'} do |f| %>

    <%= render partial: 'common/error_summary', locals: { resource: @material } %>

    <%# Necessary to allow removal of all field locks %>
    <%= hidden_field_tag 'material[locked_fields][]', '' %>

    <%= f.input :title, as: :string, field_lock: true %>

    <%= render partial: 'common/url_checker', locals: { f: f, url: materials_check_exists_path } %>

    <%= f.input :short_description, as: :markdown_area, input_html: { rows: '5' }, field_lock: true %>

    <%= f.input :long_description, as: :markdown_area, input_html: { rows: '10' }, field_lock: true %>

    <%= f.input :doi, field_lock: true %>
    

    <%= f.input :content_provider_id, collection: ContentProvider.all, label_method: :title, value_method: :id,
                include_blank: true, field_lock: true %>

    <%= f.dropdown :node_ids, options: format_for_dropdown(Node.order(:name).all), label: 'Nodes' %>

    <%= f.autocompleter :scientific_topics, url: blob_topics_path, template: 'autocompleter/term',
                        id_field: :uri, label_field: :preferred_label %>

    <%= f.multi_input :keywords , :placeholder => 'big city'%>

    <%= f.multi_input :target_audience , :placeholder => 'big city'%>

    <%= f.multi_input :resource_type , :placeholder => 'big city'%>

    <%= f.input :difficulty_level, collection: difficulty_options_for_select, selected: @material.difficulty_level.blank? ? "notspecified" : @material.difficulty_level, field_lock: true %>

    <%= f.input :licence, collection: licence_options_for_select, selected: @material.licence.blank? ? "notspecified" : @material.licence, field_lock: true %>


    <div class="form-group" id="bauthors">
      <%= f.label :authors %>
      <%= f.field_lock :authors %>

      <div id="bauthors-list">
        <% @material.bauthors.each_with_index do |bauthor, index| %>
            <%= render partial: 'common/bauthor_form',
                       locals: { form_name: 'material', index: index, bauthor: bauthor } %>
        <% end %>
      </div>


      <a href="#" id="add-bauthor-btn" class="btn btn-info">
        <i class="fa fa-plus"></i> Add author
      </a>
    </div>

    <div class="form-group" id="bcontributors">
      <%= f.label :contributors %>
      <%= f.field_lock :contributors %>

      <div id="bcontributors-list">
        <% @material.bcontributors.each_with_index do |bcontributor, index| %>
            <%= render partial: 'common/bcontributor_form',
                       locals: { form_name: 'material', index: index, bcontributor: bcontributor } %>
        <% end %>
      </div>


      <a href="#" id="add-bcontributor-btn" class="btn btn-info">
        <i class="fa fa-plus"></i> Add contributor
      </a>
    </div>


    <%= f.autocompleter :events %>



    <div class="form-group" id="external-resources">
      <%= f.label :external_resources %>
      <%= f.field_lock :external_resources %>

      <div id="external-resources-list">
        <% @material.external_resources.each_with_index do |external_resource, index| %>
            <%= render partial: 'common/external_resource_form',
                       locals: { form_name: 'material', index: index, external_resource: external_resource } %>
        <% end %>
      </div>


      <a href="#" id="add-external-resource-btn" class="btn btn-info">
        <i class="fa fa-plus"></i> Add external resource
      </a>
    </div>

    <div class="form-group">
      <%= f.submit (f.object.new_record? ? "Register" : "Update") + " training material", :class => 'btn btn-primary' %>
      <%= link_to 'Back', :back, :class => "btn btn-info" %>
      <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                  materials_path, :class => 'btn btn-default' %>
    </div>
<% end %>

<div id="external-resource-template" style="display: none">
  <%= render partial: 'common/external_resource_form',
             locals: { form_name: 'material', external_resource: ExternalResource.new } %>
</div>


<div id="bauthor-template" style="display: none">
  <%= render partial: 'common/bauthor_form',
             locals: { form_name: 'material', bauthor: Bauthor.new } %>
</div>

<div id="bcontributor-template" style="display: none">
  <%= render partial: 'common/bcontributor_form',
             locals: { form_name: 'material', bcontributor: Bcontributor.new } %>
</div>

<script type="text/javascript">
function removeSuggestion(suggestion) {
    s = suggestion.replace(/[^a-zA-Z]/g, '');
    if (confirm("Are you sure you'd like to remove '" + suggestion + "'?")) {
        $("#add-topic-" + s).fadeOut(300, function(){
            $(this).remove();
        });
        $("#hidden-suggestion-" + s).remove();
        return true;
    } else {
        return false;
    }
}
</script>
<script type="text/javascript">
document.addEventListener("turbolinks:load", function() {
    console.log("load");
    const str1 = '#material_bauthors_attributes_';
    const str2 = '_orcid';
    var str3 = '';
    var str4 = '';
    var compteur = 0;
    $('.bauthor-form').toArray().forEach(function(field){
        //console.log(field);
        //console.log(field["attributes"]["data-index"]["nodeValue"]);
        if (field["attributes"]["data-index"]["nodeValue"]=="replace-me-bauthor") {
            console.log("nothing to do");
        } else {
            // index here starts from 0 instead of 1. This is for the edit page where all authors are loaded at once so we need to loop 
            // through them to cleave them individually
            str3 = str1.concat('', compteur);
            str4 = str3.concat('', str2);
            
            //console.log(str4, compteur);    
            new Cleave(str4, {
                delimiter: '-',
                blocks: [4, 4, 4, 4]
            });  

            compteur = compteur + 1;

        }
    });
    
    
    
    
    
    console.log("load contributor");
    const str5 = '#material_bcontributors_attributes_';
    const str6 = '_orcid';
    var str7 = '';
    var str8 = '';
    var compteur = 0;
    $('.bcontributor-form').toArray().forEach(function(field){
        //console.log(field);
        //console.log(field["attributes"]["data-index"]["nodeValue"]);
        if (field["attributes"]["data-index"]["nodeValue"]=="replace-me-bcontributor") {
            console.log("nothing to do");
        } else {
            // index here starts from 0 instead of 1. This is for the edit page where all authors are loaded at once so we need to loop 
            // through them to cleave them individually
            str7 = str5.concat('', compteur);
            str8 = str7.concat('', str6);
            
            //console.log(str8, compteur);    
            new Cleave(str8, {
                delimiter: '-',
                blocks: [4, 4, 4, 4]
            });  

            compteur = compteur + 1;

        }
    });    
    
});



$(document).on('logged', function(e){
    // e.target is the element added
    //console.log("event received");
    //console.log(e.orcidindex)
    const str1 = '#material_bauthors_attributes_';
    const str2 = '_orcid';
    //console.log(str1.concat('', e.orcidindex));
    const str3 = str1.concat('', e.orcidindex);
    //console.log(str3.concat('', str2));    
    const str4 = str3.concat('', str2);
    //console.log(str4);

    new Cleave(str4, {
        delimiter: '-',
        blocks: [4, 4, 4, 4],
        uppercase: true
    });
});






$(document).on('logged_contributor', function(e){
    // e.target is the element added
    //console.log("event received");
    //console.log(e.orcidindex)
    const str1 = '#material_bcontributors_attributes_';
    const str2 = '_orcid';
    //console.log(str1.concat('', e.orcidindex));
    const str3 = str1.concat('', e.orcidindex);
    //console.log(str3.concat('', str2));    
    const str4 = str3.concat('', str2);
    //console.log(str4);

    new Cleave(str4, {
        delimiter: '-',
        blocks: [4, 4, 4, 4],
        uppercase: true
    });
});

</script>


